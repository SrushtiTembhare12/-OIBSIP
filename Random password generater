import tkinter as tk
from tkinter import messagebox
import random
import string


def generate_password(length, use_letters=True, use_numbers=True, use_symbols=True):
    characters = ''
    if use_letters:
        characters += string.ascii_letters
    if use_numbers:
        characters += string.digits
    if use_symbols:
        characters += string.punctuation

    if not characters:
        raise ValueError("At least one character type should be selected")

    return ''.join(random.choice(characters) for _ in range(length))


def generate_password_gui():
    try:
        length = int(length_entry.get())
        use_letters = letters_var.get()
        use_numbers = numbers_var.get()
        use_symbols = symbols_var.get()

        password = generate_password(length, use_letters, use_numbers, use_symbols)
        password_entry.config(state="normal")  # Change entry state to normal
        password_entry.delete(0, tk.END)
        password_entry.insert(0, password)
        password_entry.config(state="readonly")  # Change entry state back to readonly
    except ValueError as ve:
        messagebox.showerror("Error", ve)


root = tk.Tk()
root.title("Password Generator")
root.geometry("400x300")

# Styling
root.configure(bg="#f0f0f0")
root.option_add("*Font", "Arial 10")

# Labels and Entry
length_label = tk.Label(root, text="Length:", bg="#f0f0f0")
length_label.grid(row=0, column=0, padx=10, pady=10, sticky="w")
length_entry = tk.Entry(root)
length_entry.grid(row=0, column=1, padx=10, pady=10)

# Checkboxes
letters_var = tk.BooleanVar(value=True)  # Initialize with True
letters_checkbox = tk.Checkbutton(root, text="Include letters", variable=letters_var, bg="#f0f0f0")
letters_checkbox.grid(row=1, column=0, columnspan=2, padx=10, pady=5, sticky="w")

numbers_var = tk.BooleanVar(value=True)  # Initialize with True
numbers_checkbox = tk.Checkbutton(root, text="Include numbers", variable=numbers_var, bg="#f0f0f0")
numbers_checkbox.grid(row=2, column=0, columnspan=2, padx=10, pady=5, sticky="w")

symbols_var = tk.BooleanVar(value=True)  # Initialize with True
symbols_checkbox = tk.Checkbutton(root, text="Include symbols", variable=symbols_var, bg="#f0f0f0")
symbols_checkbox.grid(row=3, column=0, columnspan=2, padx=10, pady=5, sticky="w")

# Generate Button
generate_button = tk.Button(root, text="Generate Password", command=generate_password_gui, bg="#4CAF50", fg="white")
generate_button.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

# Generated Password Display
password_label = tk.Label(root, text="Generated Password:", bg="#f0f0f0")
password_label.grid(row=5, column=0, padx=10, pady=10, sticky="w")
password_entry = tk.Entry(root, state="readonly")
password_entry.grid(row=5, column=1, padx=10, pady=10)

root.mainloop()
